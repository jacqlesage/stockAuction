# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~


# An example controller showing a sample home page
GET     /                           controllers.HomeController.index
# An example controller showing how to use dependency injection
GET     /count                      controllers.CountController.count
# An example controller showing how to write asynchronous code
GET     /message                    controllers.AsyncController.message

# Map static resources from the /public folder to the /assets URL path
# this is picking up my css file - main.css
GET     /public/*file               controllers.Assets.at(path = "/public",file)

#A test from the book
GET     /hello                      controllers.HomeController.hello(name:String)

#show the blank user signup form - will need to link this into the main index page for sign up
GET     /showBlank                  controllers.CustomerController.showBlank



GET     /showBlank                  controllers.CustomerController.addCustomer

#add the new customer to the database
#POST /customer                     controllers.JavaApplicationDatabase.insertUser

POST    /customer                   controllers.JavaApplicationDatabase.insertUser

GET     /admin                     controllers.HomeController.admin

POST    /showCurrentAuction        controllers.JavaApplicationDatabase.showCurrentAuction

GET     /getCurrentAuction            controllers.JavaApplicationDatabase.getCurrentAuction

POST     /showAuction                     controllers.JavaApplicationDatabase.authenticateUser()

#action for placing & saving the bid into the sql tables.
POST     /placeBid                controllers.JavaApplicationDatabase.placeBid
#lists all users as Json end point
GET      /users                   controllers.JavaApplicationDatabase.getAllUsers
#Lists all auctions as Json end point
GET      /auctions                   controllers.JavaApplicationDatabase.showAllAuctions
#a tester for the JWT token
GET     /jwt                        controllers.JwtController.createJwtv2(a:String, b:String)
